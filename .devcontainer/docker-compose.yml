version: "3.8"
volumes:
  postgres-data:
  redis-data:

services:
  db:
    container_name: ${PROJECT_NAME:-default}-postgresdb
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGPASSWORD: ${PGPASSWORD:-password123}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      TZ: "Asia/Tokyo"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis_server:
    container_name: ${PROJECT_NAME:-default}-redis_server
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    depends_on:
      - db
  zipkin:
    image: openzipkin/zipkin
    container_name: ${PROJECT_NAME:-default}-zipkin
    ports:
      - "9411:9411"
    depends_on:
      - service-registry

  service-registry:
    container_name: ${PROJECT_NAME:-default}-service-registry
    build:
      context: ../service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
  api-gateway:
    container_name: ${PROJECT_NAME:-default}-api-gateway
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    depends_on:
      - service-registry
  app:
    container_name: ${PROJECT_NAME:-default}-javadev
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOSTNAME: postgres
    ports:
      - "8080:8080"
    volumes:
      - ../..:/workspaces:cached
    depends_on:
      - service-registry
      - db
      - redis_server
    command: sleep infinity
